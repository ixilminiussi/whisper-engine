// this code is automatically generated by frost

#ifndef FROST_HPP
#define FROST_HPP

namespace frost {

template <typename T> struct Meta;

template <typename Owner, typename T> struct Field
{
    char const *name;
    T Owner::*member;
    bool editable;
};

} // namespace frost

#include <tuple>

#endif


#ifndef FROST_META_DATA_Camera
#define FROST_META_DATA_Camera

#define FROST_BODY$Camera friend struct frost::Meta<Camera>;

#define FROST_DATA$Camera \
template <> struct frost::Meta<wsp::Camera> \
{ \
    using Type = wsp::Camera; \
    static constexpr auto fields = std::make_tuple( \
     \
    frost::Field<Type, float>{"Fov", &Type::_fov},  \
     \
    frost::Field<Type, float>{"Near Plane", &Type::_nearPlane},  \
     \
    frost::Field<Type, float>{"Far Plane", &Type::_farPlane} \
     \
    ); \
}; 
#endif
